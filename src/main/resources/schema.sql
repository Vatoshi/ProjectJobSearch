CREATE TABLE IF NOT EXISTS users (
    id IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    surname VARCHAR(255),
    age INTEGER CHECK (age > 0 AND age < 120),
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL CHECK (LENGTH(password) >= 8),
    phone_number VARCHAR(55),
    avatar VARCHAR(255),
    account_type VARCHAR(50) CHECK (account_type IN ('applicant', 'employer'))
    );

CREATE TABLE IF NOT EXISTS categories (
    id IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    parent_id INTEGER,
    CONSTRAINT fk_parent_category FOREIGN KEY (parent_id) REFERENCES categories(id) ON DELETE SET NULL
    );

CREATE TABLE IF NOT EXISTS vacancies (
    id IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    category_id INTEGER,
    salary DOUBLE CHECK (salary >= 0),
    exp_from INTEGER CHECK (exp_from >= 0),
    exp_to INTEGER CHECK (exp_to >= exp_from),
    is_active BOOLEAN DEFAULT TRUE,
    author_id INTEGER,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    location VARCHAR(255),
    CONSTRAINT fk_vacancy_category FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE SET NULL,
    CONSTRAINT fk_vacancy_author FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS contact_types (
     id IDENTITY PRIMARY KEY,
     type VARCHAR(50) NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS resumes (
    id IDENTITY PRIMARY KEY,
    applicant_id INTEGER,
    name VARCHAR(255) NOT NULL,
    category_id INTEGER,
    salary DOUBLE CHECK (salary >= 0),
    is_active BOOLEAN DEFAULT TRUE,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_resume_applicant FOREIGN KEY (applicant_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_resume_category FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE SET NULL
    );

CREATE TABLE IF NOT EXISTS contacts_info (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type_id INTEGER,
    resume_id INTEGER,
    "value" VARCHAR(255), -- Экранируйте через двойные кавычки
    CONSTRAINT fk_contact_type FOREIGN KEY (type_id) REFERENCES contact_types(id),
    CONSTRAINT fk_contact_resume FOREIGN KEY (resume_id) REFERENCES resumes(id)
    );

CREATE TABLE IF NOT EXISTS responded_applicants (
      id IDENTITY PRIMARY KEY,
      resume_id INTEGER,
      vacancy_id INTEGER,
      confirmation BOOLEAN,
      response_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      CONSTRAINT fk_responded_resume FOREIGN KEY (resume_id) REFERENCES resumes(id) ON DELETE CASCADE,
    CONSTRAINT fk_responded_vacancy FOREIGN KEY (vacancy_id) REFERENCES vacancies(id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS messages (
    id IDENTITY PRIMARY KEY,
    responded_applicant_id INTEGER,
    content TEXT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_message_response FOREIGN KEY (responded_applicant_id) REFERENCES responded_applicants(id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS education_info (
    id IDENTITY PRIMARY KEY,
    resume_id INTEGER,
    institution VARCHAR(255),
    program VARCHAR(255),
    start_date DATE,
    end_date DATE,
    degree VARCHAR(255),
    CONSTRAINT fk_education_resume FOREIGN KEY (resume_id) REFERENCES resumes(id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS work_experience_info (
    id IDENTITY PRIMARY KEY,
    resume_id INTEGER,
    years INTEGER CHECK (years >= 0),
    company_name VARCHAR(255),
    position VARCHAR(255),
    responsibilities TEXT,
    CONSTRAINT fk_work_experience_resume FOREIGN KEY (resume_id) REFERENCES resumes(id) ON DELETE CASCADE
    );
